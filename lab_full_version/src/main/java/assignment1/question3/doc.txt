Create a class called DocumentReader with a simple main method which instantiates a self- organizing list using your implementation above, designed to hold unique strings for word frequency analysis. The class reads a text file using streams, extracting each word individually. It should check to see if that word is not already contained in the self-organizing list, before adding it as a new word. Make sure your program recognizes both upper-and-lower case versions of the same word. After the document is read, print out the list – it should show the number of occurrences for each word with the most accessed words at the front of the list – further demonstrate the class showing some of the other list functionality such as removes and iteration.
Question 4: Bracket Evaluator. Recommended Readings 3.3. 10 marks.
Design and write code for an algorithm that uses a stack data structure to efficiently evaluate whether opening and closing bracket and brace pairs match up inside any given string in O(n) time, where n is the length of the string. All other content in the string can be ignored and you may use any existing stack implementation (you do not need to create your own stack).